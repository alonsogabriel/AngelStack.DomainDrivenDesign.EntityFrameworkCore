// <auto-generated />
using System;
using ConsoleTests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleTests.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TypeId");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.RegionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RegionType", (string)null);
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.City", b =>
                {
                    b.HasOne("AngelStack.DomainDrivenDesign.Entities.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AngelStack.DomainDrivenDesign.ValueObjects.CityName", "Name", b1 =>
                        {
                            b1.Property<int>("CityId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2147483647)
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name");

                            b1.HasKey("CityId");

                            b1.ToTable("City", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CityId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.Country", b =>
                {
                    b.OwnsOne("AngelStack.DomainDrivenDesign.ValueObjects.CountryName", "Name", b1 =>
                        {
                            b1.Property<int>("CountryId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Name");

                            b1.HasKey("CountryId");

                            b1.ToTable("Country", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CountryId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.Region", b =>
                {
                    b.HasOne("AngelStack.DomainDrivenDesign.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AngelStack.DomainDrivenDesign.Entities.Region", "Parent")
                        .WithMany("Regions")
                        .HasForeignKey("ParentId");

                    b.HasOne("AngelStack.DomainDrivenDesign.Entities.RegionType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AngelStack.DomainDrivenDesign.ValueObjects.RegionAlias", "Alias", b1 =>
                        {
                            b1.Property<int>("RegionId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Alias");

                            b1.HasKey("RegionId");

                            b1.ToTable("Region", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.OwnsOne("AngelStack.DomainDrivenDesign.ValueObjects.RegionName", "Name", b1 =>
                        {
                            b1.Property<int>("RegionId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)")
                                .HasColumnName("Name");

                            b1.HasKey("RegionId");

                            b1.ToTable("Region", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.Navigation("Alias");

                    b.Navigation("Country");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.RegionType", b =>
                {
                    b.OwnsOne("AngelStack.DomainDrivenDesign.ValueObjects.RegionTypeName", "Name", b1 =>
                        {
                            b1.Property<int>("RegionTypeId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("nvarchar(80)")
                                .HasColumnName("Name");

                            b1.HasKey("RegionTypeId");

                            b1.ToTable("RegionType", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RegionTypeId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("AngelStack.DomainDrivenDesign.Entities.Region", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
